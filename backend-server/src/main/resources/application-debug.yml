spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    # port number: 3306, schema: yakal(오류 나면 Schema 생성하고 서버 실행)
    url: jdbc:mysql://localhost:3306/yakal?useSSL=false&serverTimezone=UTC&useLegacyDatetimeCode=false&allowPublicKeyRetrieval=true
    username: root # mysql username
    password: 1234 # mysql password
    hikari:
      pool-name: jpa-hikari-pool
      maximum-pool-size: 5
      jdbc-url: ${spring.datasource.url}
      username: ${spring.datasource.username}
      password: ${spring.datasource.password}
      driver-class-name: ${spring.datasource.driver-class-name}
      idleTimeout: 300
      maxLifeTime: 300
      data-source-properties:
        rewriteBatchedStatements: true
  jpa:
    database: mysql
    generate-ddl: true
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        hbm2ddl.import_files_sql_extractor: org.hibernate.tool.hbm2ddl.MultipleLinesSqlCommandExtractor
        current_session_context_class: org.springframework.orm.hibernate5.SpringSessionContext
        default_batch_fetch_size: ${chunkSize:100}
        jdbc.batch_size: 20
        order_inserts: true
        order_updates: true
        format_sql: true
  image:
    path: ".//resources//static//images//"

client:
  registration:
    kakao:
      client-id: "df9ee726ca61c98b7c8a28ac91a499ab"
      client-secret: "5BA6fxYl3dHmTIirGkVy54x6ObDz8Kxl"
      redirect-uri: http://localhost:8080/api/v1/auth/kakao/callback
    google:
      client-id: "640033062382-50ej23sopkil78kp5b4v65pafcc7nrce.apps.googleusercontent.com"
      client-secret: "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"
      redirect-uri: http://localhost:8080/api/v1/auth/google/callback
    apple:
      auth-key-file: "AuthKey_25QLY6KYS4.p8"
      teamId: "4HZC2Z3WWS"
      clientId: "com.dongguk.cse.naemansan"
      clientKey: "25QLY6KYS4"
      redirect-uri: "https://localhost:8080/api/v1/auth/apple/callback"

  provider:
    kakao:
      authorization-uri: https://kauth.kakao.com/oauth/authorize
      token-uri: https://kauth.kakao.com/oauth/token
      user-info-uri: https://kapi.kakao.com/v2/user/me
    google:
      authorization-uri: "https://accounts.google.com/o/oauth2/v2/auth"
      token-uri: "https://oauth2.googleapis.com/token"
      user-info-uri: "https://www.googleapis.com/userinfo/v2/me"
    apple:
      base-url: "https://appleid.apple.com"
      authorization-uri: "https://appleid.apple.com/auth/authorize"
      token-uri: "https://appleid.apple.com/auth/token"
      jwk-uri: "https://appleid.apple.com/auth/keys"

server:
  ssl:
    enabled: true
    key-store: minica.jks # 생성한 .jks 파일 위치
    key-store-password: "yakal-debug"  # .jks를 생성할 때 입력했던 keystore 비밀번호
    key-password: "yakal-debug" # .jks를 생성할 때 입력했던 key 비밀번호
    key-alias: "localhost"
  port: 8080
  http-address: "http://yakal.dcs-hyungjoon.com"
  https-address: "https://yakal.dcs-hyungjoon.com"

# JWT Secret Key (임의로 정하기, 최소 86자)
jwt.secret: uefrfjr8ew9jfejwr9ejf8w3h4j98fj8e94fhorg9hn3owth48hqf384ohtgfu34oqh8w9th438r2j3490rfj2

iamport:
  api-key: 1476465831033633
  api-secret: niyjOzAsVAql4LRrHimgON6Dle9L1m8yycEeYCW7T97a4iM5bVDD5SHXIYebpFXCgAvDMJjyX7NSFkbb

springdoc:
  packages-to-scan: com.viewpharm.yakal
  default-consumes-media-type: application/json;charset=UTF-8
  default-produces-media-type: application/json;charset=UTF-8
  swagger-ui:
    path: api-docs.html # Swagger UI 경로 => localhost:8080/api-docs.html
    tags-sorter: method # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    operations-sorter: method # alpha: 알파벳 순 태그 정렬, method: HTTP Method 순 정렬
    display-request-duration: true
  api-docs:
    path: /api-docs/json
    groups:
      enabled: true
  cache:
    disabled: true
